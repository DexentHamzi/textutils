{"version":3,"sources":["components/Navbar.js","components/Textutils.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["navbar","props","className","mode","href","title","type","id","onClick","bgToggle","toggleMode","htmlFor","textButton","Textutils","textUpper","text","length","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","setText","toUpperCase","textLower","toLowerCase","textClear","info","textCopy","navigator","clipboard","writeText","success","removeSpace","replace","removeExtraSpace","newText","split","join","handleTextCap","charAt","slice","handleRDollar","replaceAll","handleRAt","handleRHash","handleRPer","useState","bgMode","style","backgroundColor","color","rows","placeholder","value","onChange","e","target","role","filter","n","Alert","alert","word","lower","capitilize","message","App","setMode","setbgMode","button","setButton","setAlert","toggleAlert","setTimeout","Navbar","document","body","cls","classList","remove","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ae4c15f8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction navbar(props) {\r\n  return (\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n\r\n              {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"./About\">\r\n                About\r\n              </a>\r\n            </li> */}\r\n            </ul>\r\n\r\n            <div className=\"w3-half w3-center\" onClick={() => props.bgToggle('#d6cbd3')}>\r\n              <p></p>\r\n            </div>\r\n            <div className=\"w3-half1 w3-center mx-2\" onClick={() => props.bgToggle('#9D80BA')}>\r\n              <p></p>\r\n            </div>\r\n            <div className=\"w3-half2 w3-center\" onClick={() => props.bgToggle('#A5B2AA')}>\r\n              <p></p>\r\n            </div>\r\n\r\n            <div\r\n              className={`form-check form-switch mx-3 text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                {props.textButton}\r\n              </label>\r\n            </div>\r\n\r\n            {/* <form className=\"d-flex\">\r\n            <input\r\n              style={{\r\n                backgroundColor: props.mode === \"light\" ? \"#f8f9fa\" : \"#343a40\",\r\n                color: props.mode === \"light\" ? \"#343a40\" : \"#f8f9fa\",\r\n              }}\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n  \r\n  );\r\n}\r\n\r\nexport default navbar;\r\n","import React, { useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction Textutils(props) {\r\n  const handleUPEvent = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const textUpper = () => {\r\n    if (text.length === 0) {\r\n      toast.error(\"Nothing text enter sorry 🤔\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      // console.log(text);\r\n      let newText = text;\r\n      setText(newText.toUpperCase());\r\n      // props.toggleAlert(\"success\", \"Text is now uppercase\");\r\n      toast(\"Text is now uppercase\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  const textLower = () => {\r\n    if (text.length === 0) {\r\n      toast.error(\"Nothing text enter sorry 🙂\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      let newText = text;\r\n      setText(newText.toLowerCase());\r\n      // props.toggleAlert(\"success\", \"Convert to lower Case\");\r\n      toast(\"Text is now lowercase\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  const textClear = () => {\r\n    if (text.length === 0) {\r\n      toast.error(\"Enter text below first 😪!\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      setText(\"\");\r\n      // props.toggleAlert(\"success\", \"Text Cleared\");\r\n      toast.info(\"Text Cleared!\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  const textCopy = () => {\r\n    if (text.length === 0) {\r\n      toast.error(\"Enter text then Copy 😥!\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      // let text = document.getElementById(\"Punctuation\");\r\n      // text.select();\r\n      navigator.clipboard.writeText(text);\r\n      setText(\"\");\r\n      // props.toggleAlert(\"success\", \"Copy Text\");\r\n      toast.success(\"Copy Text!\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  const removeSpace = () => {\r\n    if (text.length === 0) {\r\n      toast.error(\"First Enter Text 🙄\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      let newText = text;\r\n      setText(newText.replace(/\\s/g, \"\")); // remove all spaces\r\n      toast.success(\"Remove Spaces\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  const removeExtraSpace = () => {\r\n    if (text.length === 0) {\r\n      toast.error(\"Plz Type Your Text\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      toast.success(\"Remove Specific Spaces\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleTextCap = () => {\r\n    if (text.length === 0) {\r\n      toast.error(\"Enter Text and then Capitilize 😔\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      let newText = text;\r\n      setText(newText.charAt(0).toUpperCase() + newText.slice(1));\r\n      toast.success(\"Text First Letter Capitilize\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  // const handleTextLow = () => {\r\n  //   if (text.length === 0) {\r\n  //     toast.error(\"Enter Text and then Lower 😐\", {\r\n  //       position: \"top-center\",\r\n  //       autoClose: 3000,\r\n  //       hideProgressBar: false,\r\n  //       closeOnClick: true,\r\n  //       pauseOnHover: true,\r\n  //       draggable: true,\r\n  //       progress: undefined,\r\n  //     });\r\n  //   } else {\r\n  //     let newText = text;\r\n  //     setText(newText.charAt(0).toLowerCase() + newText.slice(1));\r\n  //     toast.success(\"Text First Letter Lowercase\", {\r\n  //       position: \"top-center\",\r\n  //       autoClose: 3000,\r\n  //       hideProgressBar: false,\r\n  //       closeOnClick: true,\r\n  //       pauseOnHover: true,\r\n  //       draggable: true,\r\n  //       progress: undefined,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  const handleRDollar = () => {\r\n    if (text.length === 0) {\r\n      toast.error(\"Enter text first then remove $\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      let newText = text;\r\n      setText(newText.replaceAll(\"$\", \"\"));\r\n      toast.success(\"Successfully remove $\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRAt = () => {\r\n    if (text.length === 0) {\r\n      toast.error(\"Enter text first then remove @\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      let newText = text;\r\n      setText(newText.replaceAll(\"@\", \"\"));\r\n      toast.success(\"Successfully remove @\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRHash = () => {\r\n    if (text.length === 0) {\r\n      toast.error(\"Enter text first then remove #\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      let newText = text;\r\n      setText(newText.replaceAll(\"#\", \"\"));\r\n      toast.success(\"Successfully remove #\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRPer = () => {\r\n    if (text.length === 0) {\r\n      toast.error(\"Enter text first then remove %\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      let newText = text;\r\n      setText(newText.replaceAll(\"%\", \"\"));\r\n      toast.success(\"Successfully remove %\", {\r\n        position: \"top-center\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`my-3 w-75 m-auto text-${\r\n          props.mode === \"light\" ? \"dark\" : \"light\"\r\n        }`}\r\n      >\r\n        <label htmlFor=\"Punctuation\" className=\"form-label\">\r\n          <h1>Enter the text Analyz</h1>\r\n        </label>\r\n        <p className={`text-${props.bgMode === \"light\" ? \"d6cbd3\" : \"d6cbd2\"}`}>\r\n          This online punctuation deleter allows you to quickly remove\r\n          punctuation characters like !\"#$%&amp;'()*+,-./:;&lt;=&gt;?@[\\]^_`{}~\r\n          from a text. Just paste the text in the textarea below, edit the\r\n          punctuation characters to remove (if needed) and click the \"Remove\r\n          Punctuation\" button.\r\n        </p>\r\n        <textarea\r\n          style={{\r\n            backgroundColor: props.mode === \"light\" ? \"#f8f9fa\" : \"#343a40\",\r\n            color: props.mode === \"light\" ? \"#343a40\" : \"#f8f9fa\",\r\n          }}\r\n          className=\"form-control\"\r\n          id=\"Punctuation\"\r\n          rows=\"8\"\r\n          placeholder=\"Enter Text Here...\"\r\n          value={text}\r\n          onChange={handleUPEvent}\r\n        ></textarea>\r\n        <div className=\"allBtn\">\r\n          {/* <button className=\"btn btn-primary my-2\" onClick={textUpper}>\r\n            Text to uppercase\r\n          </button> */}\r\n          <button className=\"sc-AxmLO jAFeHL\" onClick={textUpper}>\r\n            {/* <span role=\"img\" aria-label=\"show alert\">\r\n              🚀\r\n            </span>{\" \"} */}\r\n            UPPER CASE\r\n          </button>\r\n          {/* <button className=\"btn btn-primary my-2 mx-1\" onClick={textLower}>\r\n            Text to lowercase\r\n          </button> */}\r\n          <button className=\"sc-AxmLO jAFeHL\" onClick={textLower}>\r\n            lower case\r\n          </button>\r\n          {/* <button className=\"btn btn-primary my-2\" onClick={textClear}>\r\n            Clear Text\r\n          </button> */}\r\n          <button className=\"sc-AxmLO jAFeHL \" onClick={textClear}>\r\n            Clear Text\r\n          </button>\r\n          {/* <button className=\"btn btn-primary my-2 mx-1\" onClick={textCopy}>\r\n            Copy Text\r\n          </button> */}\r\n          <button className=\"sc-AxmLO jAFeHL  \" onClick={textCopy}>\r\n            Copy Text\r\n          </button>\r\n          {/* <button className=\"btn btn-primary my-2\" onClick={removeSpace}>\r\n            Remove Spaces\r\n          </button> */}\r\n          <button className=\"sc-AxmLO jAFeHL\" onClick={removeSpace}>\r\n            Remove Spaces\r\n          </button>\r\n          {/* <button className=\"btn btn-primary my-2\" onClick={removeExtraSpace}>\r\n            Remove Extra Spaces\r\n          </button> */}\r\n          <button className=\"sc-AxmLO jAFeHL \" onClick={removeExtraSpace}>\r\n            All Extra Spaces\r\n          </button>\r\n          {/* <button className=\"btn btn-primary my-2 mx-1\" onClick={handleTextCap}>\r\n            Text Capitilize\r\n          </button> */}\r\n          <button className=\"sc-AxmLO jAFeHL\" onClick={handleTextCap}>\r\n            Sentence case\r\n          </button>\r\n          {/* <button className=\"btn btn-primary my-2 mx-1\" onClick={handleTextLow}>\r\n            Text Lower\r\n          </button> */}\r\n          {/* <button class=\"sc-AxmLO jAFeHL\" onClick={handleTextLow}>\r\n            lower case\r\n          </button> */}\r\n\r\n          <button className=\"sc-AxmLO jAFeHL\" onClick={handleRDollar}>\r\n            Remove $\r\n          </button>\r\n\r\n          <button className=\"sc-AxmLO jAFeHL\" onClick={handleRAt}>\r\n            Remove @\r\n          </button>\r\n          <button className=\"sc-AxmLO jAFeHL\" onClick={handleRHash}>\r\n            Remove #{\" \"}\r\n          </button>\r\n          <button className=\"sc-AxmLO jAFeHL\" onClick={handleRPer}>\r\n            Remove %{\" \"}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"btn-group\" role=\"group\">\r\n          <button\r\n            id=\"btnGroupDrop1\"\r\n            type=\"button\"\r\n            className=\"btn btn-primary dropdown-toggle w-100\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            Select Operation\r\n          </button>\r\n\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\r\n            <li>\r\n              <a className=\"dropdown-item\" href=\"javascript:void(0)\">\r\n                <button className=\"sc-AxmLO jAFeHL\" onClick={textUpper}>\r\n                  Uppercase\r\n                </button>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                <button className=\"sc-AxmLO jAFeHL\" onClick={textLower}>\r\n                  Lowercase\r\n                </button>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                <button className=\"sc-AxmLO jAFeHL \" onClick={textClear}>\r\n                  Clear Text\r\n                </button>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                <button className=\"sc-AxmLO jAFeHL  \" onClick={textCopy}>\r\n                  Copy Text\r\n                </button>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                <button className=\"sc-AxmLO jAFeHL\" onClick={removeSpace}>\r\n                  Remove Spaces\r\n                </button>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                <button className=\"sc-AxmLO jAFeHL \" onClick={removeExtraSpace}>\r\n                  Remove Extra Spaces\r\n                </button>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                <button className=\"sc-AxmLO jAFeHL\" onClick={handleTextCap}>\r\n                  Sentence case\r\n                </button>\r\n              </a>\r\n            </li>\r\n            {/* <li>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                <button class=\"sc-AxmLO jAFeHL\" onClick={handleTextLow}>\r\n                  Text Lower\r\n                </button>\r\n              </a>\r\n            </li> */}\r\n            <li>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                <button className=\"sc-AxmLO jAFeHL\" onClick={handleRDollar}>\r\n                  Remove $\r\n                </button>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                <button className=\"sc-AxmLO jAFeHL\" onClick={handleRAt}>\r\n                  Remove @\r\n                </button>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                <button className=\"sc-AxmLO jAFeHL\" onClick={handleRHash}>\r\n                  Remove #{\" \"}\r\n                </button>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"dropdown-item\" href=\"#\">\r\n                <button className=\"sc-AxmLO jAFeHL\" onClick={handleRPer}>\r\n                  Remove %{\" \"}\r\n                </button>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={`container text-${\r\n          props.mode === \"light\" ? \"dark\" : \"light\"\r\n        }`}\r\n      >\r\n        <div className=\"wordCount\">\r\n          <h2>Your Text Summary</h2>\r\n          <p>\r\n            {\r\n              text.split(/\\s+/).filter(function (n) {\r\n                return n !== \"\";\r\n              }).length\r\n            }{\" \"}\r\n            words and {text.length} characters\r\n          </p>\r\n\r\n          <h5>Word Reading Time</h5>\r\n          <p>\r\n            {\" \"}\r\n            {0.008 *\r\n              text.split(\" \").filter(function (n) {\r\n                return n !== \"\";\r\n              }).length}{\" \"}\r\n            Minutes read{\" \"}\r\n          </p>\r\n        </div>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Nothing to Preview\"}</p>\r\n      </div>\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Textutils;\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitilize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitilize(props.alert.type)}!</strong> {props.alert.message}.\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React, {useState} from 'react';\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Textutils from \"./components/Textutils\";\n// import About from \"./components/About\";\nimport Alert from './components/Alert';\nimport {toast, ToastContainer} from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\"\n\nfunction App() {\n\n  const [mode, setMode] = useState('light')\n  const [bgMode, setbgMode] = useState('light')\n  const [button, setButton] = useState('Dark Mode');\n  const [alert, setAlert] = useState(null)\n\n  const toggleAlert = (type, message) => {\n      setAlert({\n        type: type,\n        message: message\n      })\n      setTimeout(() => {\n        setAlert(null);\n      }, 2000);\n    \n  }\n\n  const removeToggleClass = () => {\n    document.body.classList.remove('#d6cbd3');\n    document.body.classList.remove('#9D80BA')\n    document.body.classList.remove('#A5B2AA')\n  }\n\n  const bgToggle = (cls) => {\n    removeToggleClass();\n    document.body.classList.add(cls);\n    if (bgMode === 'light') {\n      setbgMode('#d6cbd3');\n      document.body.style.backgroundColor = '#d6cbd3';\n    }else if(bgMode === '#d6cbd3'){\n      setbgMode('#9D80BA');\n      document.body.style.backgroundColor = '#9D80BA';\n    } \n    else {\n      setbgMode('#A5B2AA');\n      document.body.style.backgroundColor = '#A5B2AA';\n    }\n  }\n\n  \n\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#1a1a1a';\n      // toggleAlert(\"success\", \"Dark Mode is Enabled\");\n      toast(\"Dark Mode is Enabled\", {\n        position: 'top-center',\n        autoClose: 3000,\n       \n      });\n      setButton('Light Mode');\n      // setLocalStorage.setItem('dark', mode);\n    }\n    \n    else{\n      setMode('light');\n      document.body.style.backgroundColor = '#f5f5f5';\n      // toggleAlert(\"success\", \"Light Mode is Enabled\")\n      toast(\"Light Mode is Enabled\", {\n        position: 'top-center',\n        autoClose: 3000,\n        \n      });\n      setButton('Dark Mode');\n      // setLocalStorage.setItem('light', mode);\n    }\n    \n  }\n  return (\n    <>\n      <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode} textButton={button} bgToggle={bgToggle} toggleAlert={toggleAlert}/>\n      <Alert alert={alert}/>\n      <Textutils mode={mode} bgMode={bgMode} toggleAlert={toggleAlert}/>\n      {/* <About /> */}\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}